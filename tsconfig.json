{
  "compilerOptions": {
    "target": "esnext",
    "module": "esnext",
    "strict": true,
    "jsx": "preserve",
    // 在表达式和声明上有隐含的any类型时报错
    "noImplicitAny": false,
    "importHelpers": true,
    // "noImplicitAny": true, //当表达式和申明 类型为any时，是否需要发出警告，设置true，则不警告
    "moduleResolution": "node",
    "experimentalDecorators": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "sourceMap": true,
    "baseUrl": ".",
    "types": ["webpack-env"],
    "paths": {
      "@/*": ["src/*"]
    },
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  },
  "module": "ESNext",
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": ["node_modules"],
  "globals": {
    "wx": true
  },
  "rules": {
    //ts专用
    "no-console": [true, "log", "error"],
    // "@typescript-eslint/no-explicit-any": "off",
    // "@typescript-eslint/no-non-null-assertion": "off",
    // "@typescript-eslint/camelcase": "off",
    // "@typescript-eslint/no-unused-vars": "off",
    // "@typescript-eslint/no-empty-function": "off",
    "no-object-literal-type-assertion": true,
    // "adjacent-overload-signatures": true, // 强制函数重载为连续的。
    // "ban-comma-operator": true, //禁止逗号运算符。
    // "ban-type": [true, ["object", "User {} instead."], ["string"]], //禁止类型
    // member-access: [true , "no-public"||"check-accessor"|| "check-constructor" || "check-parameter-property"  ] ,  //类成员必须声明 private public ....
    // member-order: [true, {order:....}],  //类声明排序
    "no-any": true, //不需使用any类型
    // no-empty-interface:true //禁止空接口 {}
    // no-import-side-effect: [true, {"ignore-module": "(\\.html|\\.css)$"}], //禁止导入带有副作用的语句
    // no-inferrable-types:[true, "ignore-params", "ignore-properties"]， //不允许将变量或参数初始化为数字，字符串或布尔值的显式类型声明。
    // no-internal-module:true， //不允许内部模块
    // no-magic-numbers: [true,1,2,3], //不允许在变量赋值之外使用常量数值。当没有指定允许值列表时，默认允许-1,0和1
    // no-namespace: [ true,"allpw-declarations"], //不允许使用内部modules和命名空间
    "no-non-null-assertion": true //不允许使用!后缀操作符的非空断言。
    // no-parameter-reassignment: true, //不允许重新分配参数
    // no-reference: true, // 禁止使用/// <reference path=> 导入 ，使用import代替
    // no-unnecessary-type-assertion: true, //如果类型断言没有改变表达式的类型就发出警告
    // no-var-requires: true, //不允许使用var module = require("module"),用 import foo = require('foo')导入
    // only-arrow-functions:[true，"allow-declarations"，"allow-named-functions"], //允许箭头表达式，不需要传统表达式 ； 允许独立的函数声明  ；允许表达，function foo() {}但不是function() {}
    // prefer-for-of:true,  //建议使用for(..of)
    // promise-function-async: true, 要求异步函数返回promise
    // typedef: [true, "call-signature", "parameter", "member-variable-declaration"], //需要定义的类型存在
    // typedef-whitespace: true, //类型声明的冒号之前是否需要空格
    // unified-signatures: true, //重载可以被统一联合成一个
    //function 专用
    // await-promise: true,  //警告不是一个promise的await
    // "ban": [
    //   true,
    //   "eval",
    //   { "name": "$", "message": "please don't" },
    //   ["describe", "only"],
    //   { "name": ["it", "only"], "message": "don't focus tests" },
    //   {
    //     "name": ["chai", "assert", "equal"],
    //     "message": "Use 'strictEqual' instead."
    //   },
    //   { "name": ["*", "forEach"], "message": "Use a regular for loop instead." }
    // ]
  }
}
